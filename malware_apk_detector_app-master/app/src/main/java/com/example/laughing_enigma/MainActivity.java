package com.example.laughing_enigma;

import androidx.appcompat.app.AppCompatActivity;
import com.example.laughing_enigma.AndroidXMLDecompress;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.os.Bundle;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.ListView;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.net.HttpURLConnection;
import java.net.URL;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.OutputStream;



public class MainActivity extends AppCompatActivity {
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        // Access the PackageManager
        PackageManager packageManager = getPackageManager();

        // Get the list of installed packages
        List<PackageInfo> installedPackages = packageManager.getInstalledPackages(PackageManager.GET_META_DATA);

        // Create a list to store APK file information
        List<String> apkList = new ArrayList<>();

        // Iterate through the list of installed packages
        for (PackageInfo packageInfo : installedPackages) {
            String packageName = packageInfo.packageName;
            String apkPath = packageInfo.applicationInfo.sourceDir;

            // Add the APK file path to the list
            apkList.add(apkPath);
        }


        ListView apkListView = findViewById(R.id.apkListView);
        ArrayAdapter<String> adapter = new ArrayAdapter<>(this, android.R.layout.simple_list_item_1, apkList);
        apkListView.setAdapter(adapter);

        // Set item click listener for the ListView
        apkListView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
            @Override
            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                // Call your desired method here or perform any action
                try {
                    handleListViewItemClick(installedPackages.get(position).applicationInfo.sourceDir);
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
        });

    }

    private static String sendGET(String GET_URL) throws IOException {
        URL obj = new URL(GET_URL);
        HttpURLConnection con = (HttpURLConnection) obj.openConnection();
        con.setRequestMethod("GET");
        con.setRequestProperty("User-Agent", "Mozilla/5.0");
        int responseCode = con.getResponseCode();
//        System.out.println("GET Response Code :: " + responseCode);
        if (responseCode == HttpURLConnection.HTTP_OK) { // success
            BufferedReader in = new BufferedReader(new InputStreamReader(con.getInputStream()));
            String inputLine;
            StringBuffer response = new StringBuffer();

            while ((inputLine = in.readLine()) != null) {
                response.append(inputLine);
            }
            in.close();

            // print result
            return response.toString();
        } else {
//            System.out.println("GET request did not work.");
            return "Error";
        }

    }

    private static String sendPOST(String POST_URL, String POST_PARAMS) throws IOException {
        URL obj = new URL(POST_URL);
        HttpURLConnection con = (HttpURLConnection) obj.openConnection();
        con.setRequestMethod("POST");
        con.setRequestProperty("User-Agent", "Mozilla/5.0");
        con.setRequestProperty("Content_Type","application/x-www-form-urlencoded");
        con.setRequestProperty("Accept", "application/json");

        // For POST only - START
        con.setDoOutput(true);
        OutputStream os = con.getOutputStream();
        os.write(POST_PARAMS.getBytes());
        os.flush();
        os.close();
        // For POST only - END

        int responseCode = con.getResponseCode();
//        System.out.println("POST Response Code :: " + responseCode);

        if (responseCode == HttpURLConnection.HTTP_OK) { //success
            BufferedReader in = new BufferedReader(new InputStreamReader(con.getInputStream()));
            String inputLine;
            StringBuffer response = new StringBuffer();

            while ((inputLine = in.readLine()) != null) {
                response.append(inputLine);
            }
            in.close();

            // print result
            return response.toString();
        } else {
//            System.out.println("POST request did not work.");
            return "Error";
        }
    }
    private void handleListViewItemClick(String path) throws IOException {
        // Your custom logic for handling the ListView item click
        // You can access the clicked item using the 'position' parameter
//        System.out.println(path);
        String xml = AndroidXMLDecompress.getXML(path);
//        System.out.println(xml);

        Thread thread = new Thread(new Runnable() {

            @Override
            public void run() {
                try {
                    String url = "http://10.0.2.2:8000/maldetect/api";
                    String body = "xml="+xml;
                    System.out.println(sendPOST(url, body));

                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        });

        thread.start();

    }

}
